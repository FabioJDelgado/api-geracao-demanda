package com.faculdade.apigeracaodemanda.functionsCalculatesDemandVariables;

import com.faculdade.apigeracaodemanda.models.Partida;
import com.faculdade.apigeracaodemanda.utils.Util;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.File;
import java.io.IOException;

public class CalculoTaxaBasicaJuros {

    public static void calculoImpactoTaxaBasicaJuros(Partida partida) throws IOException {

        // Ler o arquivo JSON referente a partida
        JsonNode jsonNode = Util.lerArquvioPartida(partida.getIdentificacaoPartidaAPI());

        // Variável que armazena a diferença entre a taxa básica de juros da rodada atual e a taxa básica de juros da rodada anterior
        double diferencaTaxaBasicaJuros = 0;

        // Verifica se não é a primeira rodada
        if (jsonNode != null) {
            // Variável que armazena a taxa básica de juros da rodada anterior
            double taxaBasicaJurosRodadaAnterior = jsonNode.get("taxaBasicaJuros").asDouble();

            // Calcula a diferença entre a taxa básica de juros da rodada atual e a taxa básica de juros da rodada anterior
            diferencaTaxaBasicaJuros = partida.getVariaveisMacroeconomicas().getTaxaBasicaJuros() - taxaBasicaJurosRodadaAnterior;
        }

        // Variável que armazena a porcentagem do impacto da taxa básica de juros de acordo com o tipo de produto
        double porcentagemImpactoTaxaBasicaJuros = 0;

        // Verifica o tipo de produto
        if (partida.getTipoProduto().equals("essencial")) {
            porcentagemImpactoTaxaBasicaJuros = 3;
        } else if (partida.getTipoProduto().equals("secundario")) {
            porcentagemImpactoTaxaBasicaJuros = 10;
        } else if (partida.getTipoProduto().equals("luxo/superfluo")) {
            porcentagemImpactoTaxaBasicaJuros = 25;
        } else{
            throw new RuntimeException("Tipo de produto inválido");
        }



    }
}
