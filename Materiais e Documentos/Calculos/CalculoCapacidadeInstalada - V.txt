package com.faculdade.apigeracaodemanda.functionsCalculatesDemandVariables;

import com.faculdade.apigeracaodemanda.models.Jogada;
import com.faculdade.apigeracaodemanda.models.Partida;

public class CalculoCapacidadeInstalada {

    // Calcula a demanda gerada pela nota da capacidade instalada
    private static void calculaDemandaCapacidadeInstalada(Partida partida){

        // Somando as notas da capacidade instalada de todas as jogadas
        double somaDasNotas = partida.getJogadas().stream().mapToDouble(Jogada::getNotaCapacidadeInstalada).sum();

        // Calcula a demanda total da capacidade instalada tem direito
        double demandaTotalCapacidadeInstalada = partida.getIntencaoCompra() * (partida.getVariaveisMicroeconomicas().getCapacidadeInstalada() / 100);

        // Percorre a lista para calcular a demanda da capacidade instalada de cada jogada
        for(Jogada jogada : partida.getJogadas()){

            // Varialvel que armazena a porcentagem da demanda total da capacidade instalada que a nota da jogada representa
            double porcentagemDemandaTotalCapacidadeInstalada = jogada.getNotaCapacidadeInstalada() * 10;

            /*// Porcentagem da demanda total da capacidade instalada que a nota da jogada representa
            if(jogada.getNotaCapacidadeInstalada() == 5){
                porcentagemDemandaTotalCapacidadeInstalada = 50;
            } else if(jogada.getNotaCapacidadeInstalada() == 8){
                porcentagemDemandaTotalCapacidadeInstalada = 80;
            } else{
                porcentagemDemandaTotalCapacidadeInstalada = 100;
            }*/

            // Calcula a quantidade de demanda total da capacidade instalada que a nota pode pegar
            double demandaTotalNotaCapacidadeInstalada = (demandaTotalCapacidadeInstalada * (porcentagemDemandaTotalCapacidadeInstalada / 100));

            // Calcula a porcentagem que a nota da jogada representa em relação a soma das notas
            double porcentagemNota = (jogada.getNotaCapacidadeInstalada() / somaDasNotas) * 100;

            // Calcula a quantidade de demanda que a nota da jogada pegou
            double demandaNota = (demandaTotalNotaCapacidadeInstalada * (porcentagemNota / 100));

            // Atribui a demanda da jogada
            int demandaFinalNota = (int) Math.floor(demandaNota);
            jogada.setDemandaCapacidadeInstalada(demandaFinalNota);
        }
    }

    // Calcula nota da capacidade instalada da jogada
    public static boolean calculaNotasCapacidadeInstaladaDemandas(Partida partida){

        // Variável de retorno da função
        boolean sucesso = true;

        // Valida se o valor informado na capacidade instalada é válido para todas as jogadas
        for(Jogada jogada : partida.getJogadas()){
            if(!jogada.variavelCapacidadeInstaladaValida()){
                sucesso = false;
                partida.getJogadasInvalidas().add(jogada);
            }
        }

        // Se todos os valores de capacidade instalada forem válidos, então calcula a nota de cada jogada
        if(sucesso){

            // Calcula a nota da jogada
            for(Jogada jogada : partida.getJogadas()){
                jogada.atribuiNotaCapacidadeInstalada();
            }

            // Calcula a demanda gerada pela nota de cada jogada
            calculaDemandaCapacidadeInstalada(partida);

            // Soma a demanda da capacidade instalada de cada jogada na demanda total da jogada
            partida.getJogadas().forEach(jogada -> jogada.setDemandaTotalJogada(jogada.getDemandaTotalJogada() + jogada.getDemandaCapacidadeInstalada()));
        }

        return sucesso;
    }
}
